/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        ListNode* dummy = new ListNode(-1);
        ListNode* curr = head;
        dummy->next=head;
        head = dummy;
        ListNode* prev = head;
        
        map<int , int> mp;
        int n = nums.size();

        for(int i=0; i<n; i++){
            mp[nums[i]]= 1;
        }


        while(curr != NULL){
            if(mp.find(curr->val) != mp.end()){
                prev->next = curr->next;
                curr=curr->next;
            }else{
                prev=prev->next;
                curr=curr->next;
            }
        }
        return head->next;
    }
};